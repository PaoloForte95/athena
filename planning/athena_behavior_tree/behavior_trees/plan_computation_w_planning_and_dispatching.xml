<!--
This Behavior Tree computes and executed a plan. If the plan failed, it has recovery actions to recompute a plan.
-->

<root BTCPP_format="4" main_tree_to_execute="MasterTree">

<BehaviorTree ID="MasterTree">
<RecoveryNode number_of_retries="5" name="SystemRecovery">
  <Sequence>
    <PipelineSequence name="ComputePlanWithReplanning">
   <UpdatedPromptController>
   <RecoveryNode number_of_retries="5" name="ProblemGenerationRecovery">
   <Sequence>
  <GenerateProblemFile name="GenerateProblemFile" 
  problem_file="{problem_file}" 
  instruction="instruction.txt" 
  prompt="prompt.txt" />
    <DetectObjects name="DetectObject" problem_instance="{problem_file}" />
    <AllObjectDetected />
    </Sequence>
    <UpdatePrompt name="UpdatePrompt" previous_prompt="{prompt}" updated_prompt="{prompt}"/>
    </RecoveryNode> 
  </UpdatedPromptController>
  <RecoveryNode number_of_retries="6" name="NavigateRecovery">
  <ComputePlan name="ComputePlanAction" planner="LPG" execution_plan="{execution_plan}" domain_file="{domain_file}" problem_file="{problem_file}" plan_length="{plan_length}"/>
  <UpdatePrompt name="UpdatePrompt" previous_prompt="{prompt}" updated_prompt="{prompt}"/>
  </RecoveryNode> 
 </PipelineSequence>
    <!-- <SubTree ID="Execution"/> -->
   <ExecutePlanNode name="PlanExecutor" plan_length="{plan_length}">
  <RateController hz="3.0">
  <DispatchTasks name="TaskDispatcher"  execution_plan="{execution_plan}" concurrent_actions="{concurrent_actions}" completed_actions="{completed_actions}"/>
  </RateController>
  <Sequence>
  <SendAction name="SendAction" robot_id="1" service_name="action_executor" />
   <UpdateState name="UpdateState" state_updater="SimpleStateUpdater" previous_state="{state}" current_state="{state}"/>
   </Sequence>  
   </ExecutePlanNode>

  </Sequence> 
  <UpdatePrompt name="UpdatePrompt" previous_prompt="{prompt}" updated_prompt="{prompt}"/>
  </RecoveryNode>

</BehaviorTree>


   <BehaviorTree ID="Execution">
         <ExecutePlanNode name="PlanExecutor" plan_length="{plan_length}">
  <RateController hz="3.0">
  <DispatchTasks name="TaskDispatcher"  execution_plan="{execution_plan}" concurrent_actions="{concurrent_actions}" completed_actions="{completed_actions}"/>
  </RateController>
  <SendAction name="SendAction" robot_id="1" service_name="action_executor" />
   </ExecutePlanNode>
    </BehaviorTree>

</root>
